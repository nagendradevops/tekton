apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mven-dep
  namespace: {{ NAMESPACE }}
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: build-tool
spec:
  description: >-
    This Task can be used to run a Maven build.
  workspaces:
    - name: source
      description: The workspace consisting of the maven project and custom maven settings.      
  params:
    - name: MAVEN_IMAGE
      type: string
      description: Maven base image
      default: gcr.io/cloud-builders/mvn@sha256:57523fc43394d6d9d2414ee8d1c85ed7a13460cbb268c3cd16d28cfb3859e641 #tag: latest
    - name: GOALS
      description: maven goals to run i.e clean package
      type: array
      default:
        - "clean"
        - "install"
        - "package"
        
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: ""
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on which we want to execute maven goals.
      default: "."
  steps:
    - name: mvn-settings
      image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
      script: |
        #!/usr/bin/env bash
        [[ -f $(workspaces.source.path)/settings.xml ]] && \
        echo 'using existing $(workspaces.source.path)/settings.xml' && exit 0
        cat > $(workspaces.source.path)/settings.xml <<EOF
         
         <settings>
           <pluginGroups xmlns="http://maven.apache.org/SETTINGS/1.1.0">
            <pluginGroup>org.sonarsource.scanner.maven</pluginGroup>
           </pluginGroups>
            <profiles>
              <profile>
                <id>sonar</id>
                <activation>
                    <activeByDefault>true</activeByDefault>
                </activation>
                <properties>
                    <!-- Optional URL to server. Default value is http://localhost:9000 -->
                    <sonar.host.url>
                    <!-- http://myserver:9000 -->
                      {{ sonar_host_url }}
                    </sonar.host.url>
                </properties>
              </profile>
            </profiles>
            <servers>
                <server>
                  <id>java-app</id>
                  <username>{{ nexus_username }}</username>
                  <password>{{ nexus_user_passwd }}</password>
                  </server>
                  <server>
                      <id>java-snap</id>
                      <username>{{ nexus_username }}</username>
                      <password>{{ nexus_user_passwd }}</password>
                  </server>              
            </servers>
            <mirrors>
              <!-- The mirrors added here are generated from environment variables. Don't change. -->
              <!-- ### mirrors from ENV ### -->
            </mirrors>
            <proxies>
              <!-- The proxies added here are generated from environment variables. Don't change. -->
              <!-- ### HTTP proxy from ENV ### -->
            </proxies>
        </settings>

        EOF

        xml=""

        if [ -n "$(params.PROXY_HOST)" -a -n "$(params.PROXY_PORT)" ]; then
          xml="<proxy>\
            <id>genproxy</id>\
            <active>true</active>\
            <protocol>$(params.PROXY_PROTOCOL)</protocol>\
            <host>$(params.PROXY_HOST)</host>\
            <port>$(params.PROXY_PORT)</port>"
          if [ -n "$(params.PROXY_USER)" -a -n "$(params.PROXY_PASSWORD)" ]; then
            xml="$xml\
                <username>$(params.PROXY_USER)</username>\
                <password>$(params.PROXY_PASSWORD)</password>"
          fi
          if [ -n "$(params.PROXY_NON_PROXY_HOSTS)" ]; then
            xml="$xml\
                <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>"
          fi
          xml="$xml\
              </proxy>"
          sed -i "s|<!-- ### HTTP proxy from ENV ### -->|$xml|" $(workspaces.source.path)/settings.xml
        fi

        if [ -n "$(params.SERVER_USER)" -a -n "$(params.SERVER_PASSWORD)" ];
        then
          xml="<server>\
            <id>sample-app</id>"
          xml="$xml\
                <username>$(params.SERVER_USER)</username>\
                <password>$(params.SERVER_PASSWORD)</password>"
          xml="$xml\
              </server>"
          sed -i "s|<!-- ### SERVER's USER INFO from ENV ### -->|$xml|" $(workspaces.source.path)/settings.xml
        fi

        if [ -n "$(params.MAVEN_MIRROR_URL)" ]; then
          xml="    <mirror>\
            <id>mirror.default</id>\
            <url>$(params.MAVEN_MIRROR_URL)</url>\
            <mirrorOf>central</mirrorOf>\
          </mirror>"
          sed -i "s|<!-- ### mirrors from ENV ### -->|$xml|" $(workspaces.source.path)/settings.xml
        fi
    - args:
        - '-s'
        - $(workspaces.source.path)/settings.xml
        - '-Dmaven.repo.local=$(workspaces.source.path)'
        - '-Dsonar.projectKey={{sonar_project_key}}'
        - '-Dsonar.login={{sonar_login_token}}'
        - $(params.GOALS)
      command:
        - /usr/bin/mvn
      image: $(params.MAVEN_IMAGE)
      name: mvn-clean-package
      resources: {}
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)

  
        
      